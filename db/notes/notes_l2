The OS is NOT your friend.

DBMS should be able to manage DBs that exceed the amount of mem available

Manage reads/writes to disk carefully to avoid unresponsivness

Maximize sequential access on disk

----------------------
P1: How to represent database in files on disk
P2: How to move data back and forth from mem/disk



P1:
    File storage
        The *Storage Manager* is responsible for maintaining the database files
        Communicates with the hw/os to read/write from disk/mem
        DB files are organized in pages
        SM maintains metadata about pages
        Page is a fixed-size block of data
        Can contain any data from the db; tuples, metadata, indexes, logs, etc
        Do not mix page types, generally
        Pages are uniquely identifiable (PageID); the DMBS will map between PageID to physical storage
        Pages:
            HW Page: 4KB
            OS Page: 4KB
            DB Page: up to 32KB
                Postgres/SQL Server is 8KB

        A heap file is an unordered collection of pages with tuples that are stored in a random order
            -> Create/Get/Write/Delete full API
            -> Must support iterating over all pages

            If data is stored in a single file, this is easy.
            For multiple files, metadata is needed.
            
            Page directory is a special page that tracks the location of data pages in database files.
            Also records metadata; list of free pages, number of free slots, etc.
            
    Page layout
        Every page contains a header of metadata
            Page size
            Checksum
            DBMS version
            Transaction visibility 
            Compression/encoding metadata
            Schema info
            Data summary/sketches

            How to organize tuple data:
                Tuple-oriented storage
                    Store the tuples exactly
                Log-structured storage
                    Store a changeset of the data
                Index-organized storage
                    Store data in leafs of index (tree)


            Most common approach is called slotted pages.
                The slot array maps 'slots' to the tuples starting position offsets.
                Tuples are stored 'bottom-up' in the page
                The header keeps track of:
                    Number of slots used
                    The offset of the starting location of the last slot used

            DBMS assigns each tuple a unique record identifier based on it's physical location within a page in a file
                FileId, PageId, Slot #

                *Applications should never rely on these IDs to mean anything*

    Tuple layout
        Tuple is just a sequence of bytes
        The DBMS has to know how to interpret those bytes

        Each tuple has a header with metadata

